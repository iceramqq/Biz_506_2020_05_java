# 객체지향의 특징

## 상속(확장, )
* 기존에 잘만들어진 클래스가 있는데 이중에 일부 메서드가 좀 불편하다라든가,
* 내가만들면 좀더 잘 만들수 있을 것 같다 라고 생각이 되면
* 기존의 클래스를 하여 새로운 클래스를 선언하고 
* 불편한 메서드만 새롭게 다시 코딩하녀 기능을 개선, 변경 하는
객체지향의 매우 중요한 특징

## 재 정의
* 기존 클래스를 상속하여 일부 메서드를 이흠을 그대로 사용하면서, 내부 작동 코드만 새롭게 만드는 것
* 와 은 함께 묶어서 생각해야 하는 개념이다.

## 정보의 은닉
* 크래스에 선언된필드변수를 르로 선언하고
* 외부에서 직접 접근하지 못하도록 하는 개념

## 캡슐화
* 데이터와 데이터를 처리하는 메서드를 하나로 묶어두는 개념ㄴ
* 만약 를 호출한다는 것은 객체 필드변수의 값 읽는 것이고
* 를 호출한다는 것은 객체 필드변수에 값을 저장한다는 것이다
* 또는 기타 여러 메서드들의 내부에서 어떤 일들이 수행되는지는 모르겠지만 나는 원하는 일을 수행할수 있다라는 개념

## 다형성
* 메서드의 매개변수의 개수, 타입이 다르면 같은 클래스 내에서
* 같은 이름의 메서드를 정의하여 사용할수 있다.

* 같은 인터페이스를 상속받은 클래스들은 생성자만 교환하여 같은 객체를 초기화하여 사용할수 있다.

* 이름이 같은 메서드는 항상 같은 일을 수행할 것이다.
* add(3,4) add(3.4, 4.5)

## 추상화
* 클래스를 선언(설계, 디자인)할때 불필요한 부분을 생략, 삭제하고 꼭 필요한 부분만 추출하여 클래스로 선언하는 절차